[{"C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\MorphingButton.tsx":"1","C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\ActivitiesDashboard.tsx":"2","C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\containers\\ActivitiesMaster.tsx":"3","C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\ActivitiesList.tsx":"4","C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\ActivityEntry.tsx":"5","C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\MorphingModal.tsx":"6","C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\ModalEditBody.tsx":"7","C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\ModalDetailsBody.tsx":"8","C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\ModalCreateBody.tsx":"9","C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\App.tsx":"10","C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\index.tsx":"11","C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\Header.tsx":"12","C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\theme.tsx":"13"},{"size":1137,"mtime":1607026331757,"results":"14","hashOfConfig":"15"},{"size":3369,"mtime":1607027381808,"results":"16","hashOfConfig":"15"},{"size":3192,"mtime":1607018665876,"results":"17","hashOfConfig":"15"},{"size":2242,"mtime":1607030616722,"results":"18","hashOfConfig":"15"},{"size":2105,"mtime":1607030577684,"results":"19","hashOfConfig":"15"},{"size":1064,"mtime":1607030140309,"results":"20","hashOfConfig":"15"},{"size":1048,"mtime":1606874422158,"results":"21","hashOfConfig":"15"},{"size":934,"mtime":1606869461600,"results":"22","hashOfConfig":"15"},{"size":993,"mtime":1607030111165,"results":"23","hashOfConfig":"15"},{"size":231,"mtime":1606863789220,"results":"24","hashOfConfig":"15"},{"size":149,"mtime":1606865284214,"results":"25","hashOfConfig":"15"},{"size":1377,"mtime":1607027220315,"results":"26","hashOfConfig":"15"},{"size":956,"mtime":1607026911584,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dexbh7",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\MorphingButton.tsx",[],"C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\ActivitiesDashboard.tsx",["56","57"],"C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\containers\\ActivitiesMaster.tsx",[],"C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\ActivitiesList.tsx",[],"C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\ActivityEntry.tsx",["58"],"//React Imports\r\nimport React from 'react';\r\nimport { Grid, TableRow, TableCell, Typography } from '@material-ui/core';\r\nimport { makeStyles } from  '@material-ui/styles';\r\n//Components\r\nimport EraseActivityButton from './MorphingButton';\r\nimport ToEditActivityButton from './MorphingButton';\r\n\r\n\r\ntype Props = {\r\n    id: number,\r\n    title: string,\r\n    text: string,\r\n    checked: boolean,\r\n    openModal: (e: any, kind: string) => void,\r\n    editActivity: (e: any) => void,\r\n    eraseActivity: (e: any) => void,\r\n    toggleActivityCheckmark: (e: any) => void\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    entry: {\r\n        padding: '2px 5px',\r\n        borderBottom: '1px dotted lightgray'\r\n    },\r\n    buttonGroup: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    }\r\n});\r\n\r\n\r\nconst ActivityEntry: React.FC<Props> = ( {id, title, text, checked, openModal, eraseActivity, toggleActivityCheckmark} ) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <TableRow className={classes.entry} data-id={id} onClick={ (e: any) => openModal(e, 'details')} >\r\n            <TableCell>\r\n                 <input type='checkbox' checked={checked} onChange={toggleActivityCheckmark} onClick={(e) => { e.stopPropagation(); }} />\r\n            </TableCell>\r\n            <TableCell>\r\n                <Typography variant=\"h6\"> \r\n                    {title}\r\n                </Typography>\r\n            </TableCell>\r\n            <TableCell>\r\n                <Typography variant=\"subtitle1\"> \r\n                    {text.substr(0, 15) + \"[...]\"}\r\n                </Typography>\r\n            </TableCell>\r\n            <TableCell>\r\n                <Typography variant=\"subtitle2\"> \r\n                    {new Date(id).toLocaleDateString('it')}\r\n                </Typography>\r\n            </TableCell>\r\n            <TableCell align=\"right\">\r\n                <EraseActivityButton kind=\"erase\" action={eraseActivity}/>\r\n                <ToEditActivityButton  kind=\"to-edit\" action={(e) => openModal(e, 'edit')}/>\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nexport default ActivityEntry;","C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\MorphingModal.tsx",[],"C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\ModalEditBody.tsx",[],"C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\ModalDetailsBody.tsx",[],["59","60"],"C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\ModalCreateBody.tsx",["61"],"C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\App.tsx",[],"C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\index.tsx",[],"C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\components\\Header.tsx",[],"C:\\coding\\progetti-ed-altro\\hooks-material-ts-todolist\\src\\theme.tsx",[],{"ruleId":"62","severity":1,"message":"63","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":14},{"ruleId":"66","severity":1,"message":"67","line":49,"column":8,"nodeType":"68","endLine":49,"endColumn":20,"suggestions":"69"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":14},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"62","severity":1,"message":"74","line":4,"column":10,"nodeType":"64","messageId":"65","endLine":4,"endColumn":20},"@typescript-eslint/no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'modal.isOpen'. Either include it or remove the dependency array.","ArrayExpression",["75"],"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"'makeStyles' is defined but never used.",{"desc":"78","fix":"79"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [activities, modal.isOpen]",{"range":"80","text":"81"},[1419,1431],"[activities, modal.isOpen]"]